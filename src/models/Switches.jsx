/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, {useEffect, useRef} from 'react'
import { useGLTF } from '@react-three/drei'
import scene from '../../public/assets/3D/switches.glb'
import gsap from "gsap";
import {useGSAP} from "@gsap/react";

const Switches =({currentSwitch, toAnimate, isCollapsed, ...props}) => {
    const { nodes, materials } = useGLTF(scene)

    const SwitchRef = useRef();

    useEffect(() => {
        materials["Red Plastic"].color.set(currentSwitch.color);
    }, [currentSwitch]);

    useGSAP(() => {
        if(!SwitchRef.current) return;
        gsap.fromTo(SwitchRef.current.position,  {y: 0.5}, {y: 0.15, duration: 0.5, ease: "easeOut"});
    }, [toAnimate]);

    useGSAP(() => {
        if(!SwitchRef.current) return;
        gsap.fromTo(SwitchRef.current.position,  {y: 0.15}, {y: 0.018, duration: 1, ease: "easeOut"});
    }, [isCollapsed]);


    return (
        <group ref={SwitchRef} {...props} dispose={null}>
            <group>
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Plane116.geometry}
                    material={materials['Black Plastic']}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Plane116_1.geometry}
                    material={materials.GoldPinConnector}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Plane116_2.geometry}
                    material={materials['Red Plastic']}
                />
            </group>
        </group>
    )
}

export default Switches;