/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, {useEffect, useRef} from 'react'
import { useGLTF } from '@react-three/drei'
import scene from '../../public/assets/3D/plate.glb'
import {useGSAP} from "@gsap/react";
import gsap from "gsap";


const Plate = ({currentPlate, isVisible, ...props}) => {

    const { nodes, materials } = useGLTF(scene)

    const PlateRef = useRef();

    useEffect(() => {
        if(!PlateRef.current) return;
        gsap.fromTo(PlateRef.current.position,  {y: 0.5}, {y: 0.1, duration: 0.5, ease: "easeOut"});
    });


    useEffect(() => {
        materials["PlateMaterial"].color.set(currentPlate.color);
    }, [currentPlate]);

    return (
        <group ref={PlateRef} {...props} dispose={null}>
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Plate.geometry}
                material={materials.PlateMaterial}
                position={[0, 0.001, 0]}
            />
        </group>
    )
}

export default Plate;

